{"version":3,"sources":["components/Text.js","components/Balance.js","components/Select.js","components/GenericInput.js","components/Button.js","components/Atm.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Text","text","id","className","Balance","balance","Select","onChange","htmlFor","name","selected","GenericInput","type","fieldName","onChangeHandler","onKeyDownHandler","error","value","label","checked","isChecked","onKeyDown","Button","onClickHandler","console","log","onClick","Atm","onSelectChange","onTextChangeHandler","onButtonClickHandler","Header","App","useState","setError","setType","amount","setAmount","setBalance","e","target","length","Number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAgBeA,EAbF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UACxB,OACE,sBAAMD,GAAIA,EAAIC,UAAWA,EAAzB,SACGF,KCKQG,EAVC,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,QACvB,OACE,sBAAKF,UAAU,UAAf,UACE,cAAC,EAAD,CAAMF,KAAMA,IACZ,uBACA,cAAC,EAAD,CAAMA,KAAI,YAAOI,SCKRC,EAXA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,qCACE,uBAAOC,QAAQ,OAAf,wCACA,yBAAQC,KAAK,OAAOF,SAAUA,EAA9B,UACE,wBAAQG,UAAQ,EAAhB,wBADF,IACuC,sDCmC9BC,EAtCM,SAAC,GAUf,IATLC,EASI,EATJA,KACAC,EAQI,EARJA,UACAX,EAOI,EAPJA,GACAY,EAMI,EANJA,gBACAC,EAKI,EALJA,iBACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,MAGIC,EADA,EADJC,UAE0B,UAAY,KACtC,OACE,qCACE,uBAAMjB,UAAU,QAAhB,cAA0Ba,EAA1B,OACA,wBAAOR,QAASK,EAAhB,cAA6BK,EAA7B,OACA,uBACEN,KAAMA,EACNH,KAAMI,EACNX,GAAIA,EACJK,SAAUO,EACVO,UAAWN,EACXE,MAAOA,EACPE,QAASA,QCJFG,EAlBA,SAAC,GAAmC,IAAjCpB,EAAgC,EAAhCA,GAAIe,EAA4B,EAA5BA,MAAOM,EAAqB,EAArBA,eAE3B,OADAC,QAAQC,IAAIR,GAEV,uBAAMS,QAASH,EAAgBpB,UAAU,MAAzC,UACE,sBAAMA,UAAU,kBAAkBD,GAAIA,EAAtC,yBAGCe,MCeQU,EArBH,SAAC,GAMN,IALLC,EAKI,EALJA,eACAC,EAII,EAJJA,oBACAb,EAGI,EAHJA,MACAc,EAEI,EAFJA,qBACAb,EACI,EADJA,MAEA,OACE,sBAAKd,UAAU,MAAf,UACE,cAAC,EAAD,CAAQI,SAAUqB,IAClB,cAAC,EAAD,CACEhB,KAAK,SACLI,MAAOA,EACPE,MAAM,eACNJ,gBAAiBe,IAEnB,cAAC,EAAD,CAAQN,eAAgBO,EAAsBb,MAAOA,QCL5Cc,EAbA,SAAC,GAA6B,IAA3B7B,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,UAAWF,EAAW,EAAXA,KAC/B,OACE,wBAAQC,GAAIA,EAAIC,UAAWA,EAA3B,SACGF,KCsDQ+B,MArDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOjB,EAAP,KAAckB,EAAd,KACA,EAAwBD,mBAAS,YAAjC,mBAAOrB,EAAP,KAAauB,EAAb,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgBiC,EAAhB,KAgCA,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQA,UAAU,SAASF,KAAK,wBAChC,sBAAKE,UAAU,OAAf,UACE,cAAC,EAAD,CAASF,KAAK,UAAUI,QAASA,IACjC,cAAC,EAAD,CACEuB,eApCsB,SAACW,GAC7Bf,QAAQC,IAAIc,EAAEC,OAAOvB,OACrBkB,EAAQI,EAAEC,OAAOvB,QAmCXY,oBAhCoB,SAACU,GACG,IAA1BA,EAAEC,OAAOvB,MAAMwB,OACjBP,EAAS,mCAETA,EAAS,IACTG,EAAUK,OAAOH,EAAEC,OAAOvB,UA4BtBD,MAAOA,EACPc,qBAzBqB,SAACS,GAC5B,GAAIH,EAAQ,CACV,GAAa,aAATxB,GAAuBP,EAAU+B,EAEnC,YADAF,EAAS,yBAGTA,EAAS,IAIXI,EADW,aAAT1B,EAAsBP,EAAU+B,EAAS/B,EAAU+B,QAGrDF,EAAS,KAcLjB,MAAOL,WCxCF+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7ab7fb38.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Text = ({ text, id, className }) => {\n  return (\n    <span id={id} className={className}>\n      {text}\n    </span>\n  );\n};\n\nText.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default Text;\n","import Text from './Text';\nconst Balance = ({ text, balance }) => {\n  return (\n    <div className='balance'>\n      <Text text={text} />\n      <br />\n      <Text text={`$ ${balance}`} />\n    </div>\n  );\n};\n\nexport default Balance;\n","const Select = ({ onChange }) => {\n  return (\n    <>\n      <label htmlFor='slct'>What would you like to do?</label>\n      <select name='slct' onChange={onChange}>\n        <option selected> Withdraw </option> <option> Deposit </option>\n      </select>\n    </>\n  );\n};\n\nexport default Select;\n","import PropTypes from 'prop-types';\n\nconst GenericInput = ({\n  type,\n  fieldName,\n  id,\n  onChangeHandler,\n  onKeyDownHandler,\n  error,\n  value,\n  label,\n  isChecked,\n}) => {\n  let checked = isChecked ? 'checked' : null;\n  return (\n    <>\n      <span className='error'> {error} </span>\n      <label htmlFor={fieldName}> {label} </label>\n      <input\n        type={type}\n        name={fieldName}\n        id={id}\n        onChange={onChangeHandler}\n        onKeyDown={onKeyDownHandler}\n        value={value}\n        checked={checked}\n      />\n    </>\n  );\n};\n\nGenericInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  fieldName: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChangeHandler: PropTypes.func.isRequired,\n};\n\nexport default GenericInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ id, value, onClickHandler }) => {\n  console.log(value);\n  return (\n    <span onClick={onClickHandler} className='btn'>\n      <span className='material-icons ' id={id}>\n        credit_card\n      </span>\n      {value}\n    </span>\n  );\n};\n\nButton.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n};\nexport default Button;\n","import Select from './Select';\nimport GenericInput from './GenericInput';\nimport Button from './Button';\n\nconst Atm = ({\n  onSelectChange,\n  onTextChangeHandler,\n  error,\n  onButtonClickHandler,\n  value,\n}) => {\n  return (\n    <div className='atm'>\n      <Select onChange={onSelectChange} />\n      <GenericInput\n        type='number'\n        error={error}\n        label='Enter Amount'\n        onChangeHandler={onTextChangeHandler}\n      />\n      <Button onClickHandler={onButtonClickHandler} value={value} />\n    </div>\n  );\n};\n\nexport default Atm;\n","import PropTypes from 'prop-types';\n\nconst Header = ({ id, className, text }) => {\n  return (\n    <header id={id} className={className}>\n      {text}\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n};\nexport default Header;\n","import './App.css';\nimport Balance from './components/Balance';\nimport Atm from './components/Atm';\nimport Header from './components/Header';\nimport { useState } from 'react';\n\nfunction App() {\n  const [error, setError] = useState('');\n  const [type, setType] = useState('Withdraw');\n  const [amount, setAmount] = useState(0);\n  const [balance, setBalance] = useState(0);\n\n  const onSelectChangeHandler = (e) => {\n    console.log(e.target.value);\n    setType(e.target.value);\n  };\n\n  const onTextChangeHandler = (e) => {\n    if (e.target.value.length === 0) {\n      setError('Please enter a valid amount...');\n    } else {\n      setError('');\n      setAmount(Number(e.target.value));\n    }\n  };\n\n  const onButtonClickHandler = (e) => {\n    if (amount) {\n      if (type === 'Withdraw' && balance < amount) {\n        setError('Insufficient Funds...');\n        return;\n      } else {\n        setError('');\n      }\n      let newBalance =\n        type === 'Withdraw' ? balance - amount : balance + amount;\n      setBalance(newBalance);\n    } else {\n      setError('');\n    }\n  };\n\n  return (\n    <div className='App'>\n      <Header className='header' text='The Ficticious Bank' />\n      <div className='body'>\n        <Balance text='Balance' balance={balance} />\n        <Atm\n          onSelectChange={onSelectChangeHandler}\n          onTextChangeHandler={onTextChangeHandler}\n          error={error}\n          onButtonClickHandler={onButtonClickHandler}\n          value={type}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}